{
  "address": "0xECB07aB9E318d55f8018Bc1d01effe1680d1f68c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_want",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_chef",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_unirouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beefyFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_outputToNativeRoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_outputToLp0Route",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_outputToLp1Route",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "harvester",
          "type": "address"
        }
      ],
      "name": "StratHarvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_CALL_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STRATEGIST_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAWAL_FEE_CAP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAWAL_MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOfPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOfWant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beefyFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beefyFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beforeDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "callFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chef",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpToken0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpToken1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "native",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "output",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "outputToLp0Route",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "outputToLp1Route",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "outputToNativeRoute",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "panic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retireStrat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beefyFeeRecipient",
          "type": "address"
        }
      ],
      "name": "setBeefyFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setCallFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_unirouter",
          "type": "address"
        }
      ],
      "name": "setUnirouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unirouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "want",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
  "receipt": {
    "to": null,
    "from": "0x0E65483DB212e166F5D7acE18e4B2413644e0164",
    "contractAddress": "0xECB07aB9E318d55f8018Bc1d01effe1680d1f68c",
    "transactionIndex": 272,
    "gasUsed": "2883024",
    "logsBloom": "0x00000000000000000000000000020000000000000000000000800000000000000004000000000000020000000000000000008000000000000010000002200000004000000000000000000000000000800003000000000000000100000004000000000000020080000080000002000800100000000000000180000000000000c00001010000000000000000000000000000008000010000000000000000000000220010000200000000000000000000000000000000000000020000000000004000080000800000000081000000000000000000000000000002102000100020000010008000000080000000040000000000000000000000000000000000100000",
    "blockHash": "0xd62a67c17050c02e47ec1c4e358ad10f35569d870b5fb00ca3461b95a4eaf79d",
    "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
    "logs": [
      {
        "transactionIndex": 272,
        "blockNumber": 15886699,
        "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
        "address": "0xECB07aB9E318d55f8018Bc1d01effe1680d1f68c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000e65483db212e166f5d7ace18e4b2413644e0164"
        ],
        "data": "0x",
        "logIndex": 473,
        "blockHash": "0xd62a67c17050c02e47ec1c4e358ad10f35569d870b5fb00ca3461b95a4eaf79d"
      },
      {
        "transactionIndex": 272,
        "blockNumber": 15886699,
        "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
        "address": "0x160532D2536175d65C03B97b0630A9802c274daD",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000ecb07ab9e318d55f8018bc1d01effe1680d1f68c",
          "0x000000000000000000000000574fe4e8120c4da1741b5fd45584de7a5b521f0f"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 474,
        "blockHash": "0xd62a67c17050c02e47ec1c4e358ad10f35569d870b5fb00ca3461b95a4eaf79d"
      },
      {
        "transactionIndex": 272,
        "blockNumber": 15886699,
        "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
        "address": "0x580A84C73811E1839F75d86d75d88cCa0c241fF4",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000ecb07ab9e318d55f8018bc1d01effe1680d1f68c",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 475,
        "blockHash": "0xd62a67c17050c02e47ec1c4e358ad10f35569d870b5fb00ca3461b95a4eaf79d"
      },
      {
        "transactionIndex": 272,
        "blockNumber": 15886699,
        "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
        "address": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000ecb07ab9e318d55f8018bc1d01effe1680d1f68c",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 476,
        "blockHash": "0xd62a67c17050c02e47ec1c4e358ad10f35569d870b5fb00ca3461b95a4eaf79d"
      },
      {
        "transactionIndex": 272,
        "blockNumber": 15886699,
        "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
        "address": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000ecb07ab9e318d55f8018bc1d01effe1680d1f68c",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 477,
        "blockHash": "0xd62a67c17050c02e47ec1c4e358ad10f35569d870b5fb00ca3461b95a4eaf79d"
      },
      {
        "transactionIndex": 272,
        "blockNumber": 15886699,
        "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
        "address": "0xa3Fa99A148fA48D14Ed51d610c367C61876997F1",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000ecb07ab9e318d55f8018bc1d01effe1680d1f68c",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 478,
        "blockHash": "0xd62a67c17050c02e47ec1c4e358ad10f35569d870b5fb00ca3461b95a4eaf79d"
      },
      {
        "transactionIndex": 272,
        "blockNumber": 15886699,
        "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
        "address": "0xa3Fa99A148fA48D14Ed51d610c367C61876997F1",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000ecb07ab9e318d55f8018bc1d01effe1680d1f68c",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 479,
        "blockHash": "0xd62a67c17050c02e47ec1c4e358ad10f35569d870b5fb00ca3461b95a4eaf79d"
      },
      {
        "transactionIndex": 272,
        "blockNumber": 15886699,
        "transactionHash": "0x21d0876ba81097bcd47d3e1debee57906c4798e26a56e18363943445491ad799",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000000e65483db212e166f5d7ace18e4b2413644e0164",
          "0x000000000000000000000000e7e2cb8c81c10ff191a73fe266788c9ce62ec754"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000c64bc29e48800000000000000000000000000000000000000000000000001163aebc2f1bab8fa0000000000000000000000000000000000000000000002153749ef62d11e2f6d000000000000000000000000000000000000000000000001162e8706c7d630fa0000000000000000000000000000000000000000000002153756541efb02b76d",
        "logIndex": 480,
        "blockHash": "0xd62a67c17050c02e47ec1c4e358ad10f35569d870b5fb00ca3461b95a4eaf79d"
      }
    ],
    "blockNumber": 15886699,
    "cumulativeGasUsed": "19964370",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x160532D2536175d65C03B97b0630A9802c274daD",
    1,
    "0x574Fe4E8120C4Da1741b5Fd45584de7A5b521F0F",
    "0xebe0c8d842AA5A57D7BEf8e524dEabA676F91cD1",
    "0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff",
    "0x10aee6B5594942433e7Fc2783598c979B030eF3D",
    "0x530115e78F7BC2fE235666651f9113DB9cecE5A2",
    "0xb66Ca5319eFc42FD1462693BAB51ee0C9E452745",
    [
      "0x580A84C73811E1839F75d86d75d88cCa0c241fF4",
      "0x831753DD7087CaC61aB5644b308642cc1c33Dc13",
      "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"
    ],
    [
      "0x580A84C73811E1839F75d86d75d88cCa0c241fF4",
      "0xa3Fa99A148fA48D14Ed51d610c367C61876997F1",
      "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
    ],
    [
      "0x580A84C73811E1839F75d86d75d88cCa0c241fF4",
      "0xa3Fa99A148fA48D14Ed51d610c367C61876997F1"
    ]
  ],
  "solcInputHash": "6cd21ea2bd1b49fbc683d4234540101b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_want\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_chef\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_unirouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beefyFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_outputToNativeRoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_outputToLp0Route\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_outputToLp1Route\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"harvester\",\"type\":\"address\"}],\"name\":\"StratHarvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_CALL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRATEGIST_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWAL_FEE_CAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWAL_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfWant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beefyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beefyFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beforeDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chef\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keeper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"native\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"output\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"outputToLp0Route\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"outputToLp1Route\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"outputToNativeRoute\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retireStrat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beefyFeeRecipient\",\"type\":\"address\"}],\"name\":\"setBeefyFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setCallFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"setKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"}],\"name\":\"setStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unirouter\",\"type\":\"address\"}],\"name\":\"setUnirouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unirouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"want\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"StratHarvest(address)\":{\"details\":\"Event that is fired each time someone harvests the strat.\"}},\"kind\":\"dev\",\"methods\":{\"beforeDeposit()\":{\"details\":\"Function to synchronize balances before new user deposit. Can be overridden in the strategy.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setBeefyFeeRecipient(address)\":{\"details\":\"Updates beefy fee recipient.\",\"params\":{\"_beefyFeeRecipient\":\"new beefy fee recipient address.\"}},\"setKeeper(address)\":{\"details\":\"Updates address of the strat keeper.\",\"params\":{\"_keeper\":\"new keeper address.\"}},\"setStrategist(address)\":{\"details\":\"Updates address where strategist fee earnings will go.\",\"params\":{\"_strategist\":\"new strategist address.\"}},\"setUnirouter(address)\":{\"details\":\"Updates router that will be used for swaps.\",\"params\":{\"_unirouter\":\"new unirouter address.\"}},\"setVault(address)\":{\"details\":\"Updates parent vault.\",\"params\":{\"_vault\":\"new vault address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol\":\"StrategyCommonChefLP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The defaut value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        _approve(sender, _msgSender(), currentAllowance - amount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[sender] = senderBalance - amount;\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _balances[account] = accountBalance - amount;\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\"},\"contracts/BIFI/interfaces/common/IMasterChef.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\npragma abicoder v1;\\n\\ninterface IMasterChef {\\n    function deposit(uint256 _pid, uint256 _amount) external;\\n    function withdraw(uint256 _pid, uint256 _amount) external;\\n    function userInfo(uint256 _pid, address _user) external view returns (uint256, uint256);\\n    function emergencyWithdraw(uint256 _pid) external;\\n}\",\"keccak256\":\"0x05aad5719145afedb7a2050ac3b4f91889aae4d95caa9b11b4dc53b5e9a072bc\",\"license\":\"MIT\"},\"contracts/BIFI/interfaces/common/IUniswapRouterETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\npragma abicoder v1;\\n\\ninterface IUniswapRouterETH {\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n}\",\"keccak256\":\"0xbf9aebb4f25cb7c8d122ee468de79bf3ac6eedd432222d6e0d14ba70eb0a2106\",\"license\":\"MIT\"},\"contracts/BIFI/interfaces/common/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\npragma abicoder v1;\\n\\ninterface IUniswapV2Pair {\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n}\",\"keccak256\":\"0x9276485d266859b8ba55861d02f3a658451127f3cdb04f0201f13eab0cb2ac99\",\"license\":\"MIT\"},\"contracts/BIFI/strategies/Common/FeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\npragma abicoder v1;\\n\\nimport \\\"./StratManager.sol\\\";\\n\\nabstract contract FeeManager is StratManager {\\n    uint constant public STRATEGIST_FEE = 112;\\n    uint constant public MAX_FEE = 1000;\\n    uint constant public MAX_CALL_FEE = 111;\\n\\n    uint constant public WITHDRAWAL_FEE_CAP = 50;\\n    uint constant public WITHDRAWAL_MAX = 10000;\\n\\n    uint public withdrawalFee = 10;\\n\\n    uint public callFee = 111;\\n    uint public beefyFee = MAX_FEE - STRATEGIST_FEE - callFee;\\n\\n    function setCallFee(uint256 _fee) external onlyManager {\\n        require(_fee <= MAX_CALL_FEE, \\\"!cap\\\");\\n\\n        callFee = _fee;\\n        beefyFee = MAX_FEE - STRATEGIST_FEE - callFee;\\n    }\\n\\n    function setWithdrawalFee(uint256 _fee) external onlyManager {\\n        require(_fee <= WITHDRAWAL_FEE_CAP, \\\"!cap\\\");\\n\\n        withdrawalFee = _fee;\\n    }\\n}\",\"keccak256\":\"0x58637ab08fbcface9fc7230198b76fcff28c420902f6dba8d1a615d57bd51b50\",\"license\":\"MIT\"},\"contracts/BIFI/strategies/Common/StratManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\npragma abicoder v1;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\n\\ncontract StratManager is Ownable, Pausable {\\n    /**\\n     * @dev Beefy Contracts:\\n     * {keeper} - Address to manage a few lower risk features of the strat\\n     * {strategist} - Address of the strategy author/deployer where strategist fee will go.\\n     * {vault} - Address of the vault that controls the strategy's funds.\\n     * {unirouter} - Address of exchange to execute swaps.\\n     */\\n    address public keeper;\\n    address public strategist;\\n    address public unirouter;\\n    address public vault;\\n    address public beefyFeeRecipient;\\n\\n    /**\\n     * @dev Initializes the base strategy.\\n     * @param _keeper address to use as alternative owner.\\n     * @param _strategist address where strategist fees go.\\n     * @param _unirouter router to use for swaps\\n     * @param _vault address of parent vault.\\n     * @param _beefyFeeRecipient address where to send Beefy's fees.\\n     */\\n    constructor(\\n        address _keeper,\\n        address _strategist,\\n        address _unirouter,\\n        address _vault,\\n        address _beefyFeeRecipient\\n    ) {\\n        keeper = _keeper;\\n        strategist = _strategist;\\n        unirouter = _unirouter;\\n        vault = _vault;\\n        beefyFeeRecipient = _beefyFeeRecipient;\\n    }\\n\\n    // checks that caller is either owner or keeper.\\n    modifier onlyManager() {\\n        require(msg.sender == owner() || msg.sender == keeper, \\\"!manager\\\");\\n        _;\\n    }\\n\\n    // verifies that the caller is not a contract.\\n    modifier onlyEOA() {\\n        require(msg.sender == tx.origin, \\\"!EOA\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Updates address of the strat keeper.\\n     * @param _keeper new keeper address.\\n     */\\n    function setKeeper(address _keeper) external onlyManager {\\n        keeper = _keeper;\\n    }\\n\\n    /**\\n     * @dev Updates address where strategist fee earnings will go.\\n     * @param _strategist new strategist address.\\n     */\\n    function setStrategist(address _strategist) external {\\n        require(msg.sender == strategist, \\\"!strategist\\\");\\n        strategist = _strategist;\\n    }\\n\\n    /**\\n     * @dev Updates router that will be used for swaps.\\n     * @param _unirouter new unirouter address.\\n     */\\n    function setUnirouter(address _unirouter) external onlyOwner {\\n        unirouter = _unirouter;\\n    }\\n\\n    /**\\n     * @dev Updates parent vault.\\n     * @param _vault new vault address.\\n     */\\n    function setVault(address _vault) external onlyOwner {\\n        vault = _vault;\\n    }\\n\\n    /**\\n     * @dev Updates beefy fee recipient.\\n     * @param _beefyFeeRecipient new beefy fee recipient address.\\n     */\\n    function setBeefyFeeRecipient(address _beefyFeeRecipient) external onlyOwner {\\n        beefyFeeRecipient = _beefyFeeRecipient;\\n    }\\n\\n    /**\\n     * @dev Function to synchronize balances before new user deposit.\\n     * Can be overridden in the strategy.\\n     */\\n    function beforeDeposit() external virtual {}\\n}\",\"keccak256\":\"0x9515e157d5c63beb45060d5579bfdecd51482ac888e6e116ee8734dab18c6c03\",\"license\":\"MIT\"},\"contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.4;\\npragma abicoder v1;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\nimport \\\"../../interfaces/common/IUniswapRouterETH.sol\\\";\\nimport \\\"../../interfaces/common/IUniswapV2Pair.sol\\\";\\nimport \\\"../../interfaces/common/IMasterChef.sol\\\";\\nimport \\\"../Common/StratManager.sol\\\";\\nimport \\\"../Common/FeeManager.sol\\\";\\n\\ncontract StrategyCommonChefLP is StratManager, FeeManager {\\n    using SafeERC20 for IERC20;\\n    using SafeMath for uint256;\\n\\n    // Tokens used\\n    address public native;\\n    address public output;\\n    address public want;\\n    address public lpToken0;\\n    address public lpToken1;\\n\\n    // Third party contracts\\n    address public chef;\\n    uint256 public poolId;\\n\\n    // Routes\\n    address[] public outputToNativeRoute;\\n    address[] public outputToLp0Route;\\n    address[] public outputToLp1Route;\\n\\n    /**\\n     * @dev Event that is fired each time someone harvests the strat.\\n     */\\n    event StratHarvest(address indexed harvester);\\n\\n    constructor(\\n        address _want,\\n        uint256 _poolId,\\n        address _chef,\\n        address _vault,\\n        address _unirouter,\\n        address _keeper,\\n        address _strategist,\\n        address _beefyFeeRecipient,\\n        address[] memory _outputToNativeRoute,\\n        address[] memory _outputToLp0Route,\\n        address[] memory _outputToLp1Route\\n    ) StratManager(_keeper, _strategist, _unirouter, _vault, _beefyFeeRecipient) {\\n        want = _want;\\n        poolId = _poolId;\\n        chef = _chef;\\n\\n        output = _outputToNativeRoute[0];\\n        native = _outputToNativeRoute[_outputToNativeRoute.length - 1];\\n        outputToNativeRoute = _outputToNativeRoute;\\n\\n        // setup lp routing\\n        lpToken0 = IUniswapV2Pair(want).token0();\\n        outputToLp0Route = _outputToLp0Route;\\n\\n        lpToken1 = IUniswapV2Pair(want).token1();\\n        outputToLp1Route = _outputToLp1Route;\\n\\n        _giveAllowances();\\n    }\\n\\n    // puts the funds to work\\n    function deposit() public whenNotPaused {\\n        uint256 wantBal = IERC20(want).balanceOf(address(this));\\n\\n        if (wantBal > 0) {\\n            IMasterChef(chef).deposit(poolId, wantBal);\\n        }\\n    }\\n\\n    function withdraw(uint256 _amount) external {\\n        require(msg.sender == vault, \\\"!vault\\\");\\n\\n        uint256 wantBal = IERC20(want).balanceOf(address(this));\\n\\n        if (wantBal < _amount) {\\n            IMasterChef(chef).withdraw(poolId, _amount.sub(wantBal));\\n            wantBal = IERC20(want).balanceOf(address(this));\\n        }\\n\\n        if (wantBal > _amount) {\\n            wantBal = _amount;\\n        }\\n\\n        if (tx.origin == owner() || paused()) {\\n            IERC20(want).safeTransfer(vault, wantBal);\\n        } else {\\n            uint256 withdrawalFeeAmount = wantBal.mul(withdrawalFee).div(WITHDRAWAL_MAX);\\n            IERC20(want).safeTransfer(vault, wantBal.sub(withdrawalFeeAmount));\\n        }\\n    }\\n\\n    // compounds earnings and charges performance fee\\n    function harvest() external whenNotPaused onlyEOA {\\n        IMasterChef(chef).deposit(poolId, 0);\\n        chargeFees();\\n        addLiquidity();\\n        deposit();\\n\\n        emit StratHarvest(msg.sender);\\n    }\\n\\n    // performance fees\\n    function chargeFees() internal {\\n        uint256 toNative = IERC20(output).balanceOf(address(this)).mul(45).div(1000);\\n        IUniswapRouterETH(unirouter).swapExactTokensForTokens(toNative, 0, outputToNativeRoute, address(this), block.timestamp);\\n\\n        uint256 nativeBal = IERC20(native).balanceOf(address(this));\\n\\n        uint256 callFeeAmount = nativeBal.mul(callFee).div(MAX_FEE);\\n        IERC20(native).safeTransfer(msg.sender, callFeeAmount);\\n\\n        uint256 beefyFeeAmount = nativeBal.mul(beefyFee).div(MAX_FEE);\\n        IERC20(native).safeTransfer(beefyFeeRecipient, beefyFeeAmount);\\n\\n        uint256 strategistFee = nativeBal.mul(STRATEGIST_FEE).div(MAX_FEE);\\n        IERC20(native).safeTransfer(strategist, strategistFee);\\n    }\\n\\n    // Adds liquidity to AMM and gets more LP tokens.\\n    function addLiquidity() internal {\\n        uint256 outputHalf = IERC20(output).balanceOf(address(this)).div(2);\\n\\n        if (lpToken0 != output) {\\n            IUniswapRouterETH(unirouter).swapExactTokensForTokens(outputHalf, 0, outputToLp0Route, address(this), block.timestamp);\\n        }\\n\\n        if (lpToken1 != output) {\\n            IUniswapRouterETH(unirouter).swapExactTokensForTokens(outputHalf, 0, outputToLp1Route, address(this), block.timestamp);\\n        }\\n\\n        uint256 lp0Bal = IERC20(lpToken0).balanceOf(address(this));\\n        uint256 lp1Bal = IERC20(lpToken1).balanceOf(address(this));\\n        IUniswapRouterETH(unirouter).addLiquidity(lpToken0, lpToken1, lp0Bal, lp1Bal, 1, 1, address(this), block.timestamp);\\n    }\\n\\n    // calculate the total underlaying 'want' held by the strat.\\n    function balanceOf() public view returns (uint256) {\\n        return balanceOfWant().add(balanceOfPool());\\n    }\\n\\n    // it calculates how much 'want' this contract holds.\\n    function balanceOfWant() public view returns (uint256) {\\n        return IERC20(want).balanceOf(address(this));\\n    }\\n\\n    // it calculates how much 'want' the strategy has working in the farm.\\n    function balanceOfPool() public view returns (uint256) {\\n        (uint256 _amount, ) = IMasterChef(chef).userInfo(poolId, address(this));\\n        return _amount;\\n    }\\n\\n    // called as part of strat migration. Sends all the available funds back to the vault.\\n    function retireStrat() external {\\n        require(msg.sender == vault, \\\"!vault\\\");\\n\\n        IMasterChef(chef).emergencyWithdraw(poolId);\\n\\n        uint256 wantBal = IERC20(want).balanceOf(address(this));\\n        IERC20(want).transfer(vault, wantBal);\\n    }\\n\\n    // pauses deposits and withdraws all funds from third party systems.\\n    function panic() public onlyManager {\\n        pause();\\n        IMasterChef(chef).emergencyWithdraw(poolId);\\n    }\\n\\n    function pause() public onlyManager {\\n        _pause();\\n\\n        _removeAllowances();\\n    }\\n\\n    function unpause() external onlyManager {\\n        _unpause();\\n\\n        _giveAllowances();\\n\\n        deposit();\\n    }\\n\\n    function _giveAllowances() internal {\\n        IERC20(want).safeApprove(chef, type(uint256).max);\\n        IERC20(output).safeApprove(unirouter, type(uint256).max);\\n\\n        IERC20(lpToken0).safeApprove(unirouter, 0);\\n        IERC20(lpToken0).safeApprove(unirouter, type(uint256).max);\\n\\n        IERC20(lpToken1).safeApprove(unirouter, 0);\\n        IERC20(lpToken1).safeApprove(unirouter, type(uint256).max);\\n    }\\n\\n    function _removeAllowances() internal {\\n        IERC20(want).safeApprove(chef, 0);\\n        IERC20(output).safeApprove(unirouter, 0);\\n        IERC20(lpToken0).safeApprove(unirouter, 0);\\n        IERC20(lpToken1).safeApprove(unirouter, 0);\\n    }\\n}\\n\",\"keccak256\":\"0x828c359eaa234f0c98502b93078056619bb44d0535240f61c71370b37ab08f91\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080604052600a600655606f60078190556200001f60706103e862000b5d565b6200002b919062000b5d565b6008553480156200003b57600080fd5b506040516200306e3803806200306e83398181016040526101608110156200006257600080fd5b815160208301516040808501516060860151608087015160a088015160c089015160e08a01516101008b0180519751999b989a96999598949793969295919491939282019284640100000000821115620000bb57600080fd5b908301906020820185811115620000d157600080fd5b8251866020820283011164010000000082111715620000ef57600080fd5b82525081516020918201928201910280838360005b838110156200011e57818101518382015260200162000104565b50505050905001604052602001805160405193929190846401000000008211156200014857600080fd5b9083019060208201858111156200015e57600080fd5b82518660208202830111640100000000821117156200017c57600080fd5b82525081516020918201928201910280838360005b83811015620001ab57818101518382015260200162000191565b5050505090500160405260200180516040519392919084640100000000821115620001d557600080fd5b908301906020820185811115620001eb57600080fd5b82518660208202830111640100000000821117156200020957600080fd5b82525081516020918201928201910280838360005b83811015620002385781810151838201526020016200021e565b505050509050016040525050508585888a8760006200025c6200056f60201b60201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b19168155600180546001600160a01b03199081166001600160a01b0398891617909155600280548216968816969096179095556003805486169487169490941790935560048054851692861692909217909155600580548416918516919091179055600b805483168f8516179055600f8d9055600e8054909216928c1692909217905583518491906200035257634e487b7160e01b600052603260045260246000fd5b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826001845162000391919062000b5d565b81518110620003b057634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600980546001600160a01b0319166001600160a01b039092169190911790558351620003ef916010919086019062000a4e565b50600b60009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156200043f57600080fd5b505afa15801562000454573d6000803e3d6000fd5b505050506040513d60208110156200046b57600080fd5b5051600c80546001600160a01b0319166001600160a01b039092169190911790558151620004a190601190602085019062000a4e565b50600b60009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015620004f157600080fd5b505afa15801562000506573d6000803e3d6000fd5b505050506040513d60208110156200051d57600080fd5b5051600d80546001600160a01b0319166001600160a01b0390921691909117905580516200055390601290602084019062000a4e565b506200055e62000573565b505050505050505050505062000bb4565b3390565b600e54600b54620005a0916001600160a01b03918216911660001962000681602090811b620013f817901c565b600354600a54620005cd916001600160a01b03918216911660001962000681602090811b620013f817901c565b600354600c54620005f9916001600160a01b039182169116600062000681602090811b620013f817901c565b600354600c5462000626916001600160a01b03918216911660001962000681602090811b620013f817901c565b600354600d5462000652916001600160a01b039182169116600062000681602090811b620013f817901c565b600354600d546200067f916001600160a01b03918216911660001962000681602090811b620013f817901c565b565b8015806200070f5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015620006d257600080fd5b505afa158015620006e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200070d919062000af1565b155b620007875760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620007df918591620007e416565b505050565b600062000840826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620008c260201b6200154f179092919060201c565b805190915015620007df578080602001905181019062000861919062000acf565b620007df5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200077e565b6060620008d38484600085620008dd565b90505b9392505050565b606082471015620009405760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200077e565b843b620009905760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200077e565b600080866001600160a01b03168587604051620009ae919062000b0a565b60006040518083038185875af1925050503d8060008114620009ed576040519150601f19603f3d011682016040523d82523d6000602084013e620009f2565b606091505b50909250905062000a0582828662000a10565b979650505050505050565b6060831562000a21575081620008d6565b82511562000a325782518084602001fd5b8160405162461bcd60e51b81526004016200077e919062000b28565b82805482825590600052602060002090810192821562000aa6579160200282015b8281111562000aa657825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000a6f565b5062000ab492915062000ab8565b5090565b5b8082111562000ab4576000815560010162000ab9565b60006020828403121562000ae1578081fd5b81518015158114620008d6578182fd5b60006020828403121562000b03578081fd5b5051919050565b6000825162000b1e81846020870162000b81565b9190910192915050565b602081526000825180602084015262000b4981604085016020870162000b81565b601f01601f19169190910160400192915050565b60008282101562000b7c57634e487b7160e01b81526011600452602481fd5b500390565b60005b8381101562000b9e57818101518382015260200162000b84565b8381111562000bae576000848401525b50505050565b6124aa8062000bc46000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80637d38ca651161015c578063be12a978116100ce578063dfbdc43711610087578063dfbdc4371461056e578063f20eaeb814610576578063f2fde38b14610589578063fb617787146105af578063fbfa77cf146105b7578063fd63a887146105ca57600080fd5b8063be12a978146104ec578063c1a3d44c14610509578063c7b9d53014610511578063d0e30db014610537578063d31025891461053f578063d92f3d731461054857600080fd5b80638e145459116101205780638e1454591461047157806390321e1a14610484578063a68833e51461048d578063ac1e5025146104b3578063aced1661146104d0578063bc063e1a146104e357600080fd5b80637d38ca65146104345780638456cb591461043c578063877562b6146104445780638bc7e8c4146104575780638da5cb5b1461046057600080fd5b80633f4ba83a116101f55780635c975abb116101b95780635c975abb146103a45780635ee167c0146103c55780636817031b146103d8578063715018a6146103fe578063722713f714610406578063748747e61461040e57600080fd5b80633f4ba83a146103835780634641257d1461038b5780634700d3051461039357806354518b1a1461039b578063573fef0a1461033657600080fd5b8063257ae0de11610247578063257ae0de1461030657806326465826146103195780632ad5a53f146103385780632e1a7d4d1461034057806336c6cf211461035d5780633e0dc34e1461037a57600080fd5b8063115880861461028457806311b0b42d1461029e5780631f1fcd51146102cd5780631fc8bc5d146102e05780631fe4a686146102f3575b600080fd5b61028c6105e7565b60408051918252519081900360200190f35b6009546102b1906001600160a01b031681565b604080516001600160a01b039092168252519081900360200190f35b600b546102b1906001600160a01b031681565b600e546102b1906001600160a01b031681565b6002546102b1906001600160a01b031681565b6003546102b1906001600160a01b031681565b6103366004803603602081101561032f57600080fd5b503561066e565b005b61028c606f81565b6103366004803603602081101561035657600080fd5b503561072f565b6102b16004803603602081101561037357600080fd5b5035610994565b61028c600f5481565b6103366109be565b610336610a37565b610336610b5a565b61028c61271081565b600054600160a01b900460ff16604080519115158252519081900360200190f35b600c546102b1906001600160a01b031681565b610336600480360360208110156103ee57600080fd5b50356001600160a01b0316610c2b565b610336610c77565b61028c610ceb565b6103366004803603602081101561042457600080fd5b50356001600160a01b0316610d0b565b61028c607081565b610336610d8c565b600d546102b1906001600160a01b031681565b61028c60065481565b6000546001600160a01b03166102b1565b6005546102b1906001600160a01b031681565b61028c60075481565b610336600480360360208110156104a357600080fd5b50356001600160a01b0316610dfb565b610336600480360360208110156104c957600080fd5b5035610e47565b6001546102b1906001600160a01b031681565b61028c6103e881565b6102b16004803603602081101561050257600080fd5b5035610eea565b61028c610efa565b6103366004803603602081101561052757600080fd5b50356001600160a01b0316610f76565b610336610fe5565b61028c60085481565b6103366004803603602081101561055e57600080fd5b50356001600160a01b0316611101565b61028c603281565b600a546102b1906001600160a01b031681565b6103366004803603602081101561059f57600080fd5b50356001600160a01b031661114d565b610336611237565b6004546102b1906001600160a01b031681565b6102b1600480360360208110156105e057600080fd5b50356113e8565b600e54600f54604080516393f1a40b60e01b81526004810192909252306024830152805160009384936001600160a01b03909116926393f1a40b92604480840193829003018186803b15801561063c57600080fd5b505afa158015610650573d6000803e3d6000fd5b505050506040513d604081101561066657600080fd5b505192915050565b6000546001600160a01b031633148061069157506001546001600160a01b031633145b6106cd576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b606f81111561070c576040805162461bcd60e51b815260206004808301919091526024820152630216361760e41b604482015290519081900360640190fd5b60078190558061071f60706103e861241b565b610729919061241b565b60085550565b6004546001600160a01b03163314610777576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b600b54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156107c257600080fd5b505afa1580156107d6573d6000803e3d6000fd5b505050506040513d60208110156107ec57600080fd5b50519050818110156108e957600e54600f546001600160a01b039091169063441a3e709061081a8585611568565b6040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561085757600080fd5b505af115801561086b573d6000803e3d6000fd5b5050600b54604080516370a0823160e01b815230600482015290516001600160a01b0390921693506370a082319250602480820192602092909190829003018186803b1580156108ba57600080fd5b505afa1580156108ce573d6000803e3d6000fd5b505050506040513d60208110156108e457600080fd5b505190505b818111156108f45750805b6000546001600160a01b03163214806109165750600054600160a01b900460ff165b1561093c57600454600b54610938916001600160a01b03918216911683611574565b5050565b600061095f612710610959600654856115a490919063ffffffff16565b906115b0565b60045490915061098f906001600160a01b031661097c8484611568565b600b546001600160a01b03169190611574565b505050565b601181815481106109a457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314806109e157506001546001600160a01b031633145b610a1d576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b610a256115bc565b610a2d611659565b610a35610fe5565b565b600054600160a01b900460ff1615610a6a5760405162461bcd60e51b8152600401610a6190612365565b60405180910390fd5b333214610aa7576040805162461bcd60e51b8152602060048083019190915260248201526321454f4160e01b604482015290519081900360640190fd5b600e54600f5460408051631c57762b60e31b8152600481019290925260006024830181905290516001600160a01b039093169263e2bbb15892604480820193929182900301818387803b158015610afd57600080fd5b505af1158015610b11573d6000803e3d6000fd5b50505050610b1d611711565b610b25611a59565b610b2d610fe5565b60405133907f577a37fdb49a88d66684922c6f913df5239b4f214b2b97c53ef8e3bbb2034cb590600090a2565b6000546001600160a01b0316331480610b7d57506001546001600160a01b031633145b610bb9576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b610bc1610d8c565b600e54600f5460408051632989754760e11b81526004810192909252516001600160a01b0390921691635312ea8e9160248082019260009290919082900301818387803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b50505050565b6000546001600160a01b03163314610c555760405162461bcd60e51b8152600401610a619061238f565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ca15760405162461bcd60e51b8152600401610a619061238f565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610d06610cf86105e7565b610d00610efa565b90611fc9565b905090565b6000546001600160a01b0316331480610d2e57506001546001600160a01b031633145b610d6a576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610daf57506001546001600160a01b031633145b610deb576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b610df3611fd5565b610a3561203a565b6000546001600160a01b03163314610e255760405162461bcd60e51b8152600401610a619061238f565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610e6a57506001546001600160a01b031633145b610ea6576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6032811115610ee5576040805162461bcd60e51b815260206004808301919091526024820152630216361760e41b604482015290519081900360640190fd5b600655565b601081815481106109a457600080fd5b600b54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610f4557600080fd5b505afa158015610f59573d6000803e3d6000fd5b505050506040513d6020811015610f6f57600080fd5b5051919050565b6002546001600160a01b03163314610fc3576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff161561100f5760405162461bcd60e51b8152600401610a6190612365565b600b54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561105a57600080fd5b505afa15801561106e573d6000803e3d6000fd5b505050506040513d602081101561108457600080fd5b5051905080156110fe57600e54600f5460408051631c57762b60e31b8152600481019290925260248201849052516001600160a01b039092169163e2bbb1589160448082019260009290919082900301818387803b1580156110e557600080fd5b505af11580156110f9573d6000803e3d6000fd5b505050505b50565b6000546001600160a01b0316331461112b5760405162461bcd60e51b8152600401610a619061238f565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146111775760405162461bcd60e51b8152600401610a619061238f565b6001600160a01b0381166111dc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a61565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b0316331461127f576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b600e54600f5460408051632989754760e11b81526004810192909252516001600160a01b0390921691635312ea8e9160248082019260009290919082900301818387803b1580156112cf57600080fd5b505af11580156112e3573d6000803e3d6000fd5b5050600b54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561133457600080fd5b505afa158015611348573d6000803e3d6000fd5b505050506040513d602081101561135e57600080fd5b5051600b54600480546040805163a9059cbb60e01b81526001600160a01b039283169381019390935260248301859052519394509091169163a9059cbb916044808201926020929091908290030181600087803b1580156113be57600080fd5b505af11580156113d2573d6000803e3d6000fd5b505050506040513d602081101561098f57600080fd5b601281815481106109a457600080fd5b8015806114815750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561144757600080fd5b505afa15801561145b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147f9190612305565b155b6114ec5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610a61565b6040516001600160a01b03831660248201526044810182905261098f90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526120b2565b606061155e8484600085612184565b90505b9392505050565b6000611561828461241b565b6040516001600160a01b03831660248201526044810182905261098f90849063a9059cbb60e01b90606401611518565b600061156182846123fc565b600061156182846123dc565b600054600160a01b900460ff1661160c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a61565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600e54600b54611678916001600160a01b0391821691166000196113f8565b600354600a54611697916001600160a01b0391821691166000196113f8565b600354600c546116b5916001600160a01b03918216911660006113f8565b600354600c546116d4916001600160a01b0391821691166000196113f8565b600354600d546116f2916001600160a01b03918216911660006113f8565b600354600d54610a35916001600160a01b0391821691166000196113f8565b600a54604080516370a0823160e01b815230600482015290516000926117a0926103e89261095992602d926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b15801561176e57600080fd5b505afa158015611782573d6000803e3d6000fd5b505050506040513d602081101561179857600080fd5b5051906115a4565b9050600360009054906101000a90046001600160a01b03166001600160a01b03166338ed1739826000601030426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818154815260200191508054801561184c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161182e575b50509650505050505050600060405180830381600087803b15801561187057600080fd5b505af1158015611884573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156118ad57600080fd5b81019080805160405193929190846401000000008211156118cd57600080fd5b9083019060208201858111156118e257600080fd5b82518660208202830111640100000000821117156118ff57600080fd5b82525081516020918201928201910280838360005b8381101561192c578181015183820152602001611914565b505050509190910160408181526009546370a0823160e01b83523060048401529051600097506001600160a01b0390911695506370a08231945060248083019450602093509091829003018186803b15801561198757600080fd5b505afa15801561199b573d6000803e3d6000fd5b505050506040513d60208110156119b157600080fd5b50516007549091506000906119cf906103e8906109599085906115a4565b6009549091506119e9906001600160a01b03163383611574565b6000611a066103e8610959600854866115a490919063ffffffff16565b600554600954919250611a26916001600160a01b03908116911683611574565b6000611a396103e86109598660706115a4565b6002546009549192506110f9916001600160a01b03908116911683611574565b600a54604080516370a0823160e01b81523060048201529051600092611ae0926002926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611aae57600080fd5b505afa158015611ac2573d6000803e3d6000fd5b505050506040513d6020811015611ad857600080fd5b5051906115b0565b600a54600c549192506001600160a01b03918216911614611c84576003546040516338ed173960e01b8152600481018381526000602483018190523060648401819052426084850181905260a0604486019081526011805460a488018190526001600160a01b03909816976338ed1739978a97929594939160c49091019086908015611b9557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b77575b50509650505050505050600060405180830381600087803b158015611bb957600080fd5b505af1158015611bcd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611bf657600080fd5b8101908080516040519392919084640100000000821115611c1657600080fd5b908301906020820185811115611c2b57600080fd5b8251866020820283011164010000000082111715611c4857600080fd5b82525081516020918201928201910280838360005b83811015611c75578181015183820152602001611c5d565b50505050905001604052505050505b600a54600d546001600160a01b03908116911614611e25576003546040516338ed173960e01b8152600481018381526000602483018190523060648401819052426084850181905260a0604486019081526012805460a488018190526001600160a01b03909816976338ed1739978a97929594939160c49091019086908015611d3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611d18575b50509650505050505050600060405180830381600087803b158015611d5a57600080fd5b505af1158015611d6e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611d9757600080fd5b8101908080516040519392919084640100000000821115611db757600080fd5b908301906020820185811115611dcc57600080fd5b8251866020820283011164010000000082111715611de957600080fd5b82525081516020918201928201910280838360005b83811015611e16578181015183820152602001611dfe565b50505050905001604052505050505b600c54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611e7057600080fd5b505afa158015611e84573d6000803e3d6000fd5b505050506040513d6020811015611e9a57600080fd5b5051600d54604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611eed57600080fd5b505afa158015611f01573d6000803e3d6000fd5b505050506040513d6020811015611f1757600080fd5b5051600354600c54600d546040805162e8e33760e81b81526001600160a01b0393841660048201529183166024830152604482018790526064820185905260016084830181905260a48301523060c48301524260e48301525193945091169163e8e3370091610104808201926060929091908290030181600087803b158015611f9f57600080fd5b505af1158015611fb3573d6000803e3d6000fd5b505050506040513d60608110156110f957600080fd5b600061156182846123c4565b600054600160a01b900460ff1615611fff5760405162461bcd60e51b8152600401610a6190612365565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861163c3390565b600e54600b54612058916001600160a01b03918216911660006113f8565b600354600a54612076916001600160a01b03918216911660006113f8565b600354600c54612094916001600160a01b03918216911660006113f8565b600354600d54610a35916001600160a01b03918216911660006113f8565b6000612107826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661154f9092919063ffffffff16565b80519091501561098f578080602001905181019061212591906122e5565b61098f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a61565b6060824710156121e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a61565b843b6122335760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a61565b600080866001600160a01b0316858760405161224f9190612316565b60006040518083038185875af1925050503d806000811461228c576040519150601f19603f3d011682016040523d82523d6000602084013e612291565b606091505b50915091506122a18282866122ac565b979650505050505050565b606083156122bb575081611561565b8251156122cb5782518084602001fd5b8160405162461bcd60e51b8152600401610a619190612332565b6000602082840312156122f6578081fd5b81518015158114611561578182fd5b600060208284031215610f6f578081fd5b60008251612328818460208701612432565b9190910192915050565b6020815260008251806020840152612351816040850160208701612432565b601f01601f19169190910160400192915050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156123d7576123d761245e565b500190565b6000826123f757634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156124165761241661245e565b500290565b60008282101561242d5761242d61245e565b500390565b60005b8381101561244d578181015183820152602001612435565b83811115610c255750506000910152565b634e487b7160e01b600052601160045260246000fdfea264697066735822122029d01cf1f22928426e100729af6e9f2b14d657ccfa81d434104ec84caa78bc5e64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061027f5760003560e01c80637d38ca651161015c578063be12a978116100ce578063dfbdc43711610087578063dfbdc4371461056e578063f20eaeb814610576578063f2fde38b14610589578063fb617787146105af578063fbfa77cf146105b7578063fd63a887146105ca57600080fd5b8063be12a978146104ec578063c1a3d44c14610509578063c7b9d53014610511578063d0e30db014610537578063d31025891461053f578063d92f3d731461054857600080fd5b80638e145459116101205780638e1454591461047157806390321e1a14610484578063a68833e51461048d578063ac1e5025146104b3578063aced1661146104d0578063bc063e1a146104e357600080fd5b80637d38ca65146104345780638456cb591461043c578063877562b6146104445780638bc7e8c4146104575780638da5cb5b1461046057600080fd5b80633f4ba83a116101f55780635c975abb116101b95780635c975abb146103a45780635ee167c0146103c55780636817031b146103d8578063715018a6146103fe578063722713f714610406578063748747e61461040e57600080fd5b80633f4ba83a146103835780634641257d1461038b5780634700d3051461039357806354518b1a1461039b578063573fef0a1461033657600080fd5b8063257ae0de11610247578063257ae0de1461030657806326465826146103195780632ad5a53f146103385780632e1a7d4d1461034057806336c6cf211461035d5780633e0dc34e1461037a57600080fd5b8063115880861461028457806311b0b42d1461029e5780631f1fcd51146102cd5780631fc8bc5d146102e05780631fe4a686146102f3575b600080fd5b61028c6105e7565b60408051918252519081900360200190f35b6009546102b1906001600160a01b031681565b604080516001600160a01b039092168252519081900360200190f35b600b546102b1906001600160a01b031681565b600e546102b1906001600160a01b031681565b6002546102b1906001600160a01b031681565b6003546102b1906001600160a01b031681565b6103366004803603602081101561032f57600080fd5b503561066e565b005b61028c606f81565b6103366004803603602081101561035657600080fd5b503561072f565b6102b16004803603602081101561037357600080fd5b5035610994565b61028c600f5481565b6103366109be565b610336610a37565b610336610b5a565b61028c61271081565b600054600160a01b900460ff16604080519115158252519081900360200190f35b600c546102b1906001600160a01b031681565b610336600480360360208110156103ee57600080fd5b50356001600160a01b0316610c2b565b610336610c77565b61028c610ceb565b6103366004803603602081101561042457600080fd5b50356001600160a01b0316610d0b565b61028c607081565b610336610d8c565b600d546102b1906001600160a01b031681565b61028c60065481565b6000546001600160a01b03166102b1565b6005546102b1906001600160a01b031681565b61028c60075481565b610336600480360360208110156104a357600080fd5b50356001600160a01b0316610dfb565b610336600480360360208110156104c957600080fd5b5035610e47565b6001546102b1906001600160a01b031681565b61028c6103e881565b6102b16004803603602081101561050257600080fd5b5035610eea565b61028c610efa565b6103366004803603602081101561052757600080fd5b50356001600160a01b0316610f76565b610336610fe5565b61028c60085481565b6103366004803603602081101561055e57600080fd5b50356001600160a01b0316611101565b61028c603281565b600a546102b1906001600160a01b031681565b6103366004803603602081101561059f57600080fd5b50356001600160a01b031661114d565b610336611237565b6004546102b1906001600160a01b031681565b6102b1600480360360208110156105e057600080fd5b50356113e8565b600e54600f54604080516393f1a40b60e01b81526004810192909252306024830152805160009384936001600160a01b03909116926393f1a40b92604480840193829003018186803b15801561063c57600080fd5b505afa158015610650573d6000803e3d6000fd5b505050506040513d604081101561066657600080fd5b505192915050565b6000546001600160a01b031633148061069157506001546001600160a01b031633145b6106cd576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b606f81111561070c576040805162461bcd60e51b815260206004808301919091526024820152630216361760e41b604482015290519081900360640190fd5b60078190558061071f60706103e861241b565b610729919061241b565b60085550565b6004546001600160a01b03163314610777576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b600b54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156107c257600080fd5b505afa1580156107d6573d6000803e3d6000fd5b505050506040513d60208110156107ec57600080fd5b50519050818110156108e957600e54600f546001600160a01b039091169063441a3e709061081a8585611568565b6040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561085757600080fd5b505af115801561086b573d6000803e3d6000fd5b5050600b54604080516370a0823160e01b815230600482015290516001600160a01b0390921693506370a082319250602480820192602092909190829003018186803b1580156108ba57600080fd5b505afa1580156108ce573d6000803e3d6000fd5b505050506040513d60208110156108e457600080fd5b505190505b818111156108f45750805b6000546001600160a01b03163214806109165750600054600160a01b900460ff165b1561093c57600454600b54610938916001600160a01b03918216911683611574565b5050565b600061095f612710610959600654856115a490919063ffffffff16565b906115b0565b60045490915061098f906001600160a01b031661097c8484611568565b600b546001600160a01b03169190611574565b505050565b601181815481106109a457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314806109e157506001546001600160a01b031633145b610a1d576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b610a256115bc565b610a2d611659565b610a35610fe5565b565b600054600160a01b900460ff1615610a6a5760405162461bcd60e51b8152600401610a6190612365565b60405180910390fd5b333214610aa7576040805162461bcd60e51b8152602060048083019190915260248201526321454f4160e01b604482015290519081900360640190fd5b600e54600f5460408051631c57762b60e31b8152600481019290925260006024830181905290516001600160a01b039093169263e2bbb15892604480820193929182900301818387803b158015610afd57600080fd5b505af1158015610b11573d6000803e3d6000fd5b50505050610b1d611711565b610b25611a59565b610b2d610fe5565b60405133907f577a37fdb49a88d66684922c6f913df5239b4f214b2b97c53ef8e3bbb2034cb590600090a2565b6000546001600160a01b0316331480610b7d57506001546001600160a01b031633145b610bb9576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b610bc1610d8c565b600e54600f5460408051632989754760e11b81526004810192909252516001600160a01b0390921691635312ea8e9160248082019260009290919082900301818387803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b50505050565b6000546001600160a01b03163314610c555760405162461bcd60e51b8152600401610a619061238f565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ca15760405162461bcd60e51b8152600401610a619061238f565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610d06610cf86105e7565b610d00610efa565b90611fc9565b905090565b6000546001600160a01b0316331480610d2e57506001546001600160a01b031633145b610d6a576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610daf57506001546001600160a01b031633145b610deb576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b610df3611fd5565b610a3561203a565b6000546001600160a01b03163314610e255760405162461bcd60e51b8152600401610a619061238f565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610e6a57506001546001600160a01b031633145b610ea6576040805162461bcd60e51b815260206004820152600860248201526710b6b0b730b3b2b960c11b604482015290519081900360640190fd5b6032811115610ee5576040805162461bcd60e51b815260206004808301919091526024820152630216361760e41b604482015290519081900360640190fd5b600655565b601081815481106109a457600080fd5b600b54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610f4557600080fd5b505afa158015610f59573d6000803e3d6000fd5b505050506040513d6020811015610f6f57600080fd5b5051919050565b6002546001600160a01b03163314610fc3576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff161561100f5760405162461bcd60e51b8152600401610a6190612365565b600b54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561105a57600080fd5b505afa15801561106e573d6000803e3d6000fd5b505050506040513d602081101561108457600080fd5b5051905080156110fe57600e54600f5460408051631c57762b60e31b8152600481019290925260248201849052516001600160a01b039092169163e2bbb1589160448082019260009290919082900301818387803b1580156110e557600080fd5b505af11580156110f9573d6000803e3d6000fd5b505050505b50565b6000546001600160a01b0316331461112b5760405162461bcd60e51b8152600401610a619061238f565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146111775760405162461bcd60e51b8152600401610a619061238f565b6001600160a01b0381166111dc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a61565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b0316331461127f576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b600e54600f5460408051632989754760e11b81526004810192909252516001600160a01b0390921691635312ea8e9160248082019260009290919082900301818387803b1580156112cf57600080fd5b505af11580156112e3573d6000803e3d6000fd5b5050600b54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561133457600080fd5b505afa158015611348573d6000803e3d6000fd5b505050506040513d602081101561135e57600080fd5b5051600b54600480546040805163a9059cbb60e01b81526001600160a01b039283169381019390935260248301859052519394509091169163a9059cbb916044808201926020929091908290030181600087803b1580156113be57600080fd5b505af11580156113d2573d6000803e3d6000fd5b505050506040513d602081101561098f57600080fd5b601281815481106109a457600080fd5b8015806114815750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561144757600080fd5b505afa15801561145b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147f9190612305565b155b6114ec5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610a61565b6040516001600160a01b03831660248201526044810182905261098f90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526120b2565b606061155e8484600085612184565b90505b9392505050565b6000611561828461241b565b6040516001600160a01b03831660248201526044810182905261098f90849063a9059cbb60e01b90606401611518565b600061156182846123fc565b600061156182846123dc565b600054600160a01b900460ff1661160c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a61565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600e54600b54611678916001600160a01b0391821691166000196113f8565b600354600a54611697916001600160a01b0391821691166000196113f8565b600354600c546116b5916001600160a01b03918216911660006113f8565b600354600c546116d4916001600160a01b0391821691166000196113f8565b600354600d546116f2916001600160a01b03918216911660006113f8565b600354600d54610a35916001600160a01b0391821691166000196113f8565b600a54604080516370a0823160e01b815230600482015290516000926117a0926103e89261095992602d926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b15801561176e57600080fd5b505afa158015611782573d6000803e3d6000fd5b505050506040513d602081101561179857600080fd5b5051906115a4565b9050600360009054906101000a90046001600160a01b03166001600160a01b03166338ed1739826000601030426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818154815260200191508054801561184c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161182e575b50509650505050505050600060405180830381600087803b15801561187057600080fd5b505af1158015611884573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156118ad57600080fd5b81019080805160405193929190846401000000008211156118cd57600080fd5b9083019060208201858111156118e257600080fd5b82518660208202830111640100000000821117156118ff57600080fd5b82525081516020918201928201910280838360005b8381101561192c578181015183820152602001611914565b505050509190910160408181526009546370a0823160e01b83523060048401529051600097506001600160a01b0390911695506370a08231945060248083019450602093509091829003018186803b15801561198757600080fd5b505afa15801561199b573d6000803e3d6000fd5b505050506040513d60208110156119b157600080fd5b50516007549091506000906119cf906103e8906109599085906115a4565b6009549091506119e9906001600160a01b03163383611574565b6000611a066103e8610959600854866115a490919063ffffffff16565b600554600954919250611a26916001600160a01b03908116911683611574565b6000611a396103e86109598660706115a4565b6002546009549192506110f9916001600160a01b03908116911683611574565b600a54604080516370a0823160e01b81523060048201529051600092611ae0926002926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611aae57600080fd5b505afa158015611ac2573d6000803e3d6000fd5b505050506040513d6020811015611ad857600080fd5b5051906115b0565b600a54600c549192506001600160a01b03918216911614611c84576003546040516338ed173960e01b8152600481018381526000602483018190523060648401819052426084850181905260a0604486019081526011805460a488018190526001600160a01b03909816976338ed1739978a97929594939160c49091019086908015611b9557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b77575b50509650505050505050600060405180830381600087803b158015611bb957600080fd5b505af1158015611bcd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611bf657600080fd5b8101908080516040519392919084640100000000821115611c1657600080fd5b908301906020820185811115611c2b57600080fd5b8251866020820283011164010000000082111715611c4857600080fd5b82525081516020918201928201910280838360005b83811015611c75578181015183820152602001611c5d565b50505050905001604052505050505b600a54600d546001600160a01b03908116911614611e25576003546040516338ed173960e01b8152600481018381526000602483018190523060648401819052426084850181905260a0604486019081526012805460a488018190526001600160a01b03909816976338ed1739978a97929594939160c49091019086908015611d3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611d18575b50509650505050505050600060405180830381600087803b158015611d5a57600080fd5b505af1158015611d6e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611d9757600080fd5b8101908080516040519392919084640100000000821115611db757600080fd5b908301906020820185811115611dcc57600080fd5b8251866020820283011164010000000082111715611de957600080fd5b82525081516020918201928201910280838360005b83811015611e16578181015183820152602001611dfe565b50505050905001604052505050505b600c54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611e7057600080fd5b505afa158015611e84573d6000803e3d6000fd5b505050506040513d6020811015611e9a57600080fd5b5051600d54604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611eed57600080fd5b505afa158015611f01573d6000803e3d6000fd5b505050506040513d6020811015611f1757600080fd5b5051600354600c54600d546040805162e8e33760e81b81526001600160a01b0393841660048201529183166024830152604482018790526064820185905260016084830181905260a48301523060c48301524260e48301525193945091169163e8e3370091610104808201926060929091908290030181600087803b158015611f9f57600080fd5b505af1158015611fb3573d6000803e3d6000fd5b505050506040513d60608110156110f957600080fd5b600061156182846123c4565b600054600160a01b900460ff1615611fff5760405162461bcd60e51b8152600401610a6190612365565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861163c3390565b600e54600b54612058916001600160a01b03918216911660006113f8565b600354600a54612076916001600160a01b03918216911660006113f8565b600354600c54612094916001600160a01b03918216911660006113f8565b600354600d54610a35916001600160a01b03918216911660006113f8565b6000612107826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661154f9092919063ffffffff16565b80519091501561098f578080602001905181019061212591906122e5565b61098f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a61565b6060824710156121e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a61565b843b6122335760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a61565b600080866001600160a01b0316858760405161224f9190612316565b60006040518083038185875af1925050503d806000811461228c576040519150601f19603f3d011682016040523d82523d6000602084013e612291565b606091505b50915091506122a18282866122ac565b979650505050505050565b606083156122bb575081611561565b8251156122cb5782518084602001fd5b8160405162461bcd60e51b8152600401610a619190612332565b6000602082840312156122f6578081fd5b81518015158114611561578182fd5b600060208284031215610f6f578081fd5b60008251612328818460208701612432565b9190910192915050565b6020815260008251806020840152612351816040850160208701612432565b601f01601f19169190910160400192915050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156123d7576123d761245e565b500190565b6000826123f757634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156124165761241661245e565b500290565b60008282101561242d5761242d61245e565b500390565b60005b8381101561244d578181015183820152602001612435565b83811115610c255750506000910152565b634e487b7160e01b600052601160045260246000fdfea264697066735822122029d01cf1f22928426e100729af6e9f2b14d657ccfa81d434104ec84caa78bc5e64736f6c63430008040033",
  "devdoc": {
    "events": {
      "StratHarvest(address)": {
        "details": "Event that is fired each time someone harvests the strat."
      }
    },
    "kind": "dev",
    "methods": {
      "beforeDeposit()": {
        "details": "Function to synchronize balances before new user deposit. Can be overridden in the strategy."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setBeefyFeeRecipient(address)": {
        "details": "Updates beefy fee recipient.",
        "params": {
          "_beefyFeeRecipient": "new beefy fee recipient address."
        }
      },
      "setKeeper(address)": {
        "details": "Updates address of the strat keeper.",
        "params": {
          "_keeper": "new keeper address."
        }
      },
      "setStrategist(address)": {
        "details": "Updates address where strategist fee earnings will go.",
        "params": {
          "_strategist": "new strategist address."
        }
      },
      "setUnirouter(address)": {
        "details": "Updates router that will be used for swaps.",
        "params": {
          "_unirouter": "new unirouter address."
        }
      },
      "setVault(address)": {
        "details": "Updates parent vault.",
        "params": {
          "_vault": "new vault address."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 375,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1263,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 39481,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "keeper",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 39483,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "strategist",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 39485,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "unirouter",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 39487,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "vault",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 39489,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "beefyFeeRecipient",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 39338,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "withdrawalFee",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 39341,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "callFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 39348,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "beefyFee",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 40361,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "native",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 40363,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "output",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 40365,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "want",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 40367,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "lpToken0",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 40369,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "lpToken1",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 40371,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "chef",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 40373,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "poolId",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 40376,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "outputToNativeRoute",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 40379,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "outputToLp0Route",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 40382,
        "contract": "contracts/BIFI/strategies/Common/StrategyCommonChefLP.sol:StrategyCommonChefLP",
        "label": "outputToLp1Route",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}